{"version":3,"sources":["old-website/src/drawDot.js","old-website/src/drawers/classic.js","old-website/src/presets/classic.js"],"names":["drawDot","ctx","dot","beginPath","arc","x","y","ex","Math","PI","fillStyle","color","fill","draw","diagram","canvas","width","i","max","edges","length","va","vb","lineWidth","strokeStyle","moveTo","lineTo","stroke","cells","forEach","c","site","dots","j","push","random","drawer","time","offset"],"mappings":";AAKC,aALc,SAASA,EAAQC,EAAKC,GACpCD,EAAIE,YACJF,EAAIG,IAAIF,EAAIG,EAAGH,EAAII,EAAGJ,EAAIK,GAAG,EAAG,EAAa,EAAVC,KAAKC,IACxCR,EAAIS,UAAYR,EAAIS,MACpBV,EAAIW,OACJ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACYA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAjBD,IAAA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,eAgBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAdc,SAASC,EAAKC,GAAS,IAAA,EAAA,KAChCC,KAAAA,OAAOC,MAAQ,KAAKD,OAAOC,MAE5B,IAAA,IAAIC,EAAI,EAAGC,EAAMJ,EAAQK,MAAMC,OAAQH,EAAIC,EAAKD,IAAM,CACtCH,IAAAA,EAAAA,EAAQK,MAAMF,GAAzBI,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,GACPnB,KAAAA,YACAoB,KAAAA,UAAY,EACZC,KAAAA,YAAkC,oBAAA,OAAA,KAAM,EAAIH,EAAAA,SAAAA,EAAIC,GAArD,KACKG,KAAAA,OAAOJ,EAAGhB,EAAGgB,EAAGf,GAChBoB,KAAAA,OAAOJ,EAAGjB,EAAGiB,EAAGhB,GAChBqB,KAAAA,SAGNb,EAAQc,MAAMC,QAAQ,SAAAC,GAAK,OAAA,EAAQ,EAAA,SAAA,EAAMA,EAAEC;;ACN7B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAVf,IAAA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,WASe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GANf,IADA,IAAIC,EAAO,GACHf,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACvB,IAAA,IAAIgB,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BD,EAAKE,MAAK,EAAIjB,EAAAA,SAAI,GAAJA,GAAUT,KAAK2B,SAAW,IAAU,GAAJF,GAAUzB,KAAK2B,SAAW,MAI3D,IAAA,EAAA,CAAEC,OAAAA,EAAF,QAAUJ,KAAAA,EAAMK,KAAM,IAAMC,OAAQ,IAApC,QAAA,QAAA","file":"classic.937022f5.map","sourceRoot":"..","sourcesContent":["export default function drawDot(ctx, dot) {\n\tctx.beginPath();\n\tctx.arc(dot.x, dot.y, dot.ex/2, 0, Math.PI * 2);\n\tctx.fillStyle = dot.color;\n\tctx.fill();\n}\n","import dst from '../utils/dst';\nimport drawDot from '../drawDot';\n\nexport default function draw(diagram) {\n\tthis.canvas.width = this.canvas.width;\n\n\tfor(let i = 0, max = diagram.edges.length; i < max; i ++) {\n\t\tconst { va, vb } = diagram.edges[i];\n\t\tthis.beginPath();\n\t\tthis.lineWidth = 2;\n\t\tthis.strokeStyle = `rgba(106,27,154, ${3.5 / dst(va, vb)})`;\n\t\tthis.moveTo(va.x, va.y);\n\t\tthis.lineTo(vb.x, vb.y);\n\t\tthis.stroke();\n\t}\n\n\tdiagram.cells.forEach(c => drawDot(this, c.site));\n}\n","import drawer from '../drawers/classic';\nimport dot from '../dot';\n\nlet dots = [];\nfor(let i = 0; i < 15; i += 1) {\n\tfor(let j = 0; j < 10; j += 1) {\n\t\tdots.push(dot(i * 70 * (Math.random() + 0.5), j * 70 * (Math.random() + 0.5)));\n\t}\n}\n\nexport default { drawer, dots, time: 1000, offset: 10 };"]}