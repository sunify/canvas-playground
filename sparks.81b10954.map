{"version":3,"sources":["node_modules/run-with-fps/index.js","node_modules/victor/index.js","sparks/point.js","node_modules/lerp/index.js","node_modules/lerp-array/index.js","node_modules/rgb-hex/index.js","node_modules/hex-rgb/index.js","node_modules/@sunify/lerp-color/dist/utils.js","node_modules/@sunify/lerp-color/dist/index.js","node_modules/eases/back-in-out.js","node_modules/eases/back-in.js","node_modules/eases/back-out.js","node_modules/eases/bounce-out.js","node_modules/eases/bounce-in-out.js","node_modules/eases/bounce-in.js","node_modules/eases/circ-in-out.js","node_modules/eases/circ-in.js","node_modules/eases/circ-out.js","node_modules/eases/cubic-in-out.js","node_modules/eases/cubic-in.js","node_modules/eases/cubic-out.js","node_modules/eases/elastic-in-out.js","node_modules/eases/elastic-in.js","node_modules/eases/elastic-out.js","node_modules/eases/expo-in-out.js","node_modules/eases/expo-in.js","node_modules/eases/expo-out.js","node_modules/eases/linear.js","node_modules/eases/quad-in-out.js","node_modules/eases/quad-in.js","node_modules/eases/quad-out.js","node_modules/eases/quart-in-out.js","node_modules/eases/quart-in.js","node_modules/eases/quart-out.js","node_modules/eases/quint-in-out.js","node_modules/eases/quint-in.js","node_modules/eases/quint-out.js","node_modules/eases/sine-in-out.js","node_modules/eases/sine-in.js","node_modules/eases/sine-out.js","node_modules/eases/index.js","node_modules/lodash/_freeGlobal.js","node_modules/lodash/_root.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/isObject.js","node_modules/lodash/isFunction.js","node_modules/lodash/_coreJsData.js","node_modules/lodash/_isMasked.js","node_modules/lodash/_toSource.js","node_modules/lodash/_baseIsNative.js","node_modules/lodash/_getValue.js","node_modules/lodash/_getNative.js","node_modules/lodash/_nativeCreate.js","node_modules/lodash/_hashClear.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_Hash.js","node_modules/lodash/_listCacheClear.js","node_modules/lodash/eq.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/_listCacheDelete.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_listCacheHas.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_Map.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_mapCacheDelete.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_MapCache.js","node_modules/lodash/memoize.js","sparks/index.js"],"names":["distFast","x1","y1","x2","y2","x","y","Math","min","abs","max","Point","pos","vel","acc","friction","Vector","width","height","add","multiply","field","gridSize","i","round","j","f","PI","setAxes","sin","cos","module","exports","red","green","blue","alpha","isPercent","toString","includes","res","match","map","Number","undefined","parseFloat","TypeError","slice","hexChars","match3or4Hex","match6or8Hex","nonHexChars","RegExp","validHexSize","hex","options","test","replace","length","parseInt","substring","repeat","num","format","PIXEL_RATIO","ctx","document","createElement","getContext","dpr","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","innerWidth","innerHeight","canvasValue","v","canvas","getElementById","style","trackClearanceTimeout","drawLine","path","beginPath","forEach","moveTo","lineTo","stroke","points","draw","filter","t","Date","now","p","age","strokeStyle","eases","quartInOut","lineWidth","update","dx","angle","dy","mouseMoving","a","cx","cy","mouseTrack","push","emitParticles","baseAngle","atan2","baseLen","random","len","handleMove","e","touches","preventDefault","pageX","pageY","clearTimeout","setTimeout","addEventListener","passive","fireworks","handleClick","altKey","stop","hot","dispose"],"mappings":"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","file":"sparks.81b10954.map","sourceRoot":"..","sourcesContent":["module.exports = function runWithFPS (fn, fps) {\n  var interval = 1000 / fps;\n  var then = Date.now();\n  var stopped = false;\n\n  function run() {\n    if (!stopped) {\n      requestAnimationFrame(run);\n    }\n\n    var now = Date.now();\n    var delta = now - then;\n\n    if (delta > interval && !stopped) {\n      then = now - (delta % interval);\n      fn(now);\n    }\n  };\n\n  requestAnimationFrame(run);\n  fn(Date.now());\n\n  return function() {\n    stopped = true;\n  }\n};","exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n","import Vector from 'victor';\n\nexport function distFast(x1, y1, x2, y2) {\n  // Approximation by using octagons approach\n  const x = x2 - x1 || 0.001;\n  const y = y2 - y1 || 0.001;\n  return (\n    1.426776695 *\n    Math.min(\n      0.7071067812 * (Math.abs(x) + Math.abs(y)),\n      Math.max(Math.abs(x), Math.abs(y))\n    )\n  );\n}\n\nexport default class Point {\n  constructor(pos, vel, acc, friction) {\n    this.pos = pos;\n    this.acc = acc || new Vector(0, 0);\n    this.vel = vel || new Vector(0, 0);\n    this.friction = friction || new Vector(0.7, 0.7);\n  }\n\n  update(width, height) {\n    this.vel.add(this.acc);\n    this.vel.multiply(this.friction);\n    this.pos.add(this.vel);\n\n    if (this.pos.x > width) {\n      this.pos.x = 0;\n    }\n\n    if (this.pos.x < 0) {\n      this.pos.x = width;\n    }\n\n    if (this.pos.y > height) {\n      this.pos.y = 0;\n    }\n\n    if (this.pos.y < 0) {\n      this.pos.y = height;\n    }\n  }\n\n  applyToField(field, gridSize) {\n    const i = Math.round(this.pos.x / gridSize);\n    const j = Math.round(this.pos.y / gridSize);\n    // field.forEach((row, i) => {\n    //   row.forEach((cell, j) => {\n    //     const x = i * gridSize;\n    //     const y = j * gridSize;\n    //     const d = distFast(x, y, this.pos.x, this.pos.y);\n    //     const f = (1 / Math.pow(d, 2)) * cell * 1000;\n    //   });\n    // });\n    // this.acc.set;\n\n    if (field[i] && field[i][j]) {\n      const f = field[i][j] * Math.PI;\n      this.acc.setAxes(Math.sin(f) / 40, Math.cos(f) / 40);\n    }\n  }\n}\n","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","var lerp = require('lerp')\n\nmodule.exports = function lerpValues(value1, value2, t, out) {\n    if (typeof value1 === 'number'\n            && typeof value2 === 'number')\n        return lerp(value1, value2, t)\n    else { //assume array\n        var len = Math.min(value1.length, value2.length)\n        out = out||new Array(len)\n        for (var i=0; i<len; i++) \n            out[i] = lerp(value1[i], value2[i], t)\n        return out\n    }\n}","'use strict';\n/* eslint-disable no-mixed-operators */\nmodule.exports = (red, green, blue, alpha) => {\n\tconst isPercent = (red + (alpha || '')).toString().includes('%');\n\n\tif (typeof red === 'string') {\n\t\tconst res = red.match(/(0?\\.?\\d{1,3})%?\\b/g).map(Number);\n\t\t// TODO: use destructuring when targeting Node.js 6\n\t\tred = res[0];\n\t\tgreen = res[1];\n\t\tblue = res[2];\n\t\talpha = res[3];\n\t} else if (alpha !== undefined) {\n\t\talpha = parseFloat(alpha);\n\t}\n\n\tif (typeof red !== 'number' ||\n\t\ttypeof green !== 'number' ||\n\t\ttypeof blue !== 'number' ||\n\t\tred > 255 ||\n\t\tgreen > 255 ||\n\t\tblue > 255) {\n\t\tthrow new TypeError('Expected three numbers below 256');\n\t}\n\n\tif (typeof alpha === 'number') {\n\t\tif (!isPercent && alpha >= 0 && alpha <= 1) {\n\t\t\talpha = Math.round(255 * alpha);\n\t\t} else if (isPercent && alpha >= 0 && alpha <= 100) {\n\t\t\talpha = Math.round(255 * alpha / 100);\n\t\t} else {\n\t\t\tthrow new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);\n\t\t}\n\t\talpha = (alpha | 1 << 8).toString(16).slice(1);\n\t} else {\n\t\talpha = '';\n\t}\n\n\treturn ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1) + alpha;\n};\n","'use strict';\n\nconst hexChars = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexChars}]{3}[${hexChars}]?`;\nconst match6or8Hex = `#?[${hexChars}]{6}([${hexChars}]{2})?`;\n\nconst nonHexChars = new RegExp(`[^#${hexChars}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nmodule.exports = function (hex, options = {}) {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alpha = 255;\n\n\tif (hex.length === 8) {\n\t\talpha = parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.substring(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talpha = parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.substring(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst num = parseInt(hex, 16);\n\tconst red = num >> 16;\n\tconst green = (num >> 8) & 255;\n\tconst blue = num & 255;\n\n\treturn options.format === 'array' ?\n\t\t[red, green, blue, alpha] :\n\t\t{red, green, blue, alpha};\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rgb_hex_1 = __importDefault(require(\"rgb-hex\"));\nvar hex_rgb_1 = __importDefault(require(\"hex-rgb\"));\nvar hexColorRegex = /^#(?=[0-9a-fA-F]*$)(?:.{3}|.{4}|.{6}|.{8})$/;\nvar rgbColorRegex = /^rgb\\((\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\)$/;\nvar rgbaColorRegex = /^rgba\\((\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d+(?:\\.\\d+)?|\\.\\d+)\\)$/;\nexports.isColor = function (c) {\n    return hexColorRegex.test(String(c)) ||\n        rgbColorRegex.test(String(c)) ||\n        rgbaColorRegex.test(String(c));\n};\nexports.parseColor = function (color) {\n    if (hexColorRegex.test(color)) {\n        var _a = hex_rgb_1.default(color, { format: 'array' }), r = _a[0], g = _a[1], b = _a[2], a = _a[3];\n        return [r, g, b, a === 255 ? 1 : a];\n    }\n    if (rgbColorRegex.test(color)) {\n        var match = color.match(rgbColorRegex);\n        if (match) {\n            return match\n                .slice(1, 4)\n                .map(Number)\n                .concat([1]);\n        }\n    }\n    if (rgbaColorRegex.test(color)) {\n        var match = color.match(rgbaColorRegex);\n        if (match) {\n            return match.slice(1, 5).map(Number);\n        }\n    }\n    return undefined;\n};\nexports.stringifyColor = function (color, target) {\n    var _a = color.slice(0, 3).map(Math.round), r = _a[0], g = _a[1], b = _a[2];\n    var a = color[3];\n    if (hexColorRegex.test(target)) {\n        if (a === 1) {\n            return \"#\" + rgb_hex_1.default(r, g, b);\n        }\n        return \"#\" + rgb_hex_1.default(r, g, b, a);\n    }\n    if (rgbColorRegex.test(target) && a === 1) {\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lerp_array_1 = __importDefault(require(\"lerp-array\"));\nvar utils_1 = require(\"./utils\");\nvar utils_2 = require(\"./utils\");\nexports.isColor = utils_2.isColor;\nvar lerpColor = function (start, end, t) {\n    if (t === 0 || start === end) {\n        return start;\n    }\n    if (t === 1) {\n        return end;\n    }\n    var startColor = utils_1.parseColor(start);\n    var endColor = utils_1.parseColor(end);\n    if (startColor && endColor) {\n        return utils_1.stringifyColor(lerp_array_1.default(startColor, endColor, t), end);\n    }\n    return undefined;\n};\nexports.default = lerpColor;\n","function backInOut(t) {\n  var s = 1.70158 * 1.525\n  if ((t *= 2) < 1)\n    return 0.5 * (t * t * ((s + 1) * t - s))\n  return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2)\n}\n\nmodule.exports = backInOut","function backIn(t) {\n  var s = 1.70158\n  return t * t * ((s + 1) * t - s)\n}\n\nmodule.exports = backIn","function backOut(t) {\n  var s = 1.70158\n  return --t * t * ((s + 1) * t + s) + 1\n}\n\nmodule.exports = backOut","function bounceOut(t) {\n  var a = 4.0 / 11.0\n  var b = 8.0 / 11.0\n  var c = 9.0 / 10.0\n\n  var ca = 4356.0 / 361.0\n  var cb = 35442.0 / 1805.0\n  var cc = 16061.0 / 1805.0\n\n  var t2 = t * t\n\n  return t < a\n    ? 7.5625 * t2\n    : t < b\n      ? 9.075 * t2 - 9.9 * t + 3.4\n      : t < c\n        ? ca * t2 - cb * t + cc\n        : 10.8 * t * t - 20.52 * t + 10.72\n}\n\nmodule.exports = bounceOut","var bounceOut = require('./bounce-out')\n\nfunction bounceInOut(t) {\n  return t < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5\n}\n\nmodule.exports = bounceInOut","var bounceOut = require('./bounce-out')\n\nfunction bounceIn(t) {\n  return 1.0 - bounceOut(1.0 - t)\n}\n\nmodule.exports = bounceIn","function circInOut(t) {\n  if ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1)\n  return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)\n}\n\nmodule.exports = circInOut","function circIn(t) {\n  return 1.0 - Math.sqrt(1.0 - t * t)\n}\n\nmodule.exports = circIn","function circOut(t) {\n  return Math.sqrt(1 - ( --t * t ))\n}\n\nmodule.exports = circOut","function cubicInOut(t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0\n}\n\nmodule.exports = cubicInOut","function cubicIn(t) {\n  return t * t * t\n}\n\nmodule.exports = cubicIn","function cubicOut(t) {\n  var f = t - 1.0\n  return f * f * f + 1.0\n}\n\nmodule.exports = cubicOut","function elasticInOut(t) {\n  return t < 0.5\n    ? 0.5 * Math.sin(+13.0 * Math.PI/2 * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n    : 0.5 * Math.sin(-13.0 * Math.PI/2 * ((2.0 * t - 1.0) + 1.0)) * Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0\n}\n\nmodule.exports = elasticInOut","function elasticIn(t) {\n  return Math.sin(13.0 * t * Math.PI/2) * Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nmodule.exports = elasticIn","function elasticOut(t) {\n  return Math.sin(-13.0 * (t + 1.0) * Math.PI/2) * Math.pow(2.0, -10.0 * t) + 1.0\n}\n\nmodule.exports = elasticOut","function expoInOut(t) {\n  return (t === 0.0 || t === 1.0)\n    ? t\n    : t < 0.5\n      ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n      : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0\n}\n\nmodule.exports = expoInOut","function expoIn(t) {\n  return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nmodule.exports = expoIn","function expoOut(t) {\n  return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t)\n}\n\nmodule.exports = expoOut","function linear(t) {\n  return t\n}\n\nmodule.exports = linear","function quadInOut(t) {\n    t /= 0.5\n    if (t < 1) return 0.5*t*t\n    t--\n    return -0.5 * (t*(t-2) - 1)\n}\n\nmodule.exports = quadInOut","function quadIn(t) {\n  return t * t\n}\n\nmodule.exports = quadIn","function quadOut(t) {\n  return -t * (t - 2.0)\n}\n\nmodule.exports = quadOut","function quarticInOut(t) {\n  return t < 0.5\n    ? +8.0 * Math.pow(t, 4.0)\n    : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0\n}\n\nmodule.exports = quarticInOut","function quarticIn(t) {\n  return Math.pow(t, 4.0)\n}\n\nmodule.exports = quarticIn","function quarticOut(t) {\n  return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0\n}\n\nmodule.exports = quarticOut","function qinticInOut(t) {\n    if ( ( t *= 2 ) < 1 ) return 0.5 * t * t * t * t * t\n    return 0.5 * ( ( t -= 2 ) * t * t * t * t + 2 )\n}\n\nmodule.exports = qinticInOut","function qinticIn(t) {\n  return t * t * t * t * t\n}\n\nmodule.exports = qinticIn","function qinticOut(t) {\n  return --t * t * t * t * t + 1\n}\n\nmodule.exports = qinticOut","function sineInOut(t) {\n  return -0.5 * (Math.cos(Math.PI*t) - 1)\n}\n\nmodule.exports = sineInOut","function sineIn (t) {\n  var v = Math.cos(t * Math.PI * 0.5)\n  if (Math.abs(v) < 1e-14) return 1\n  else return 1 - v\n}\n\nmodule.exports = sineIn\n","function sineOut(t) {\n  return Math.sin(t * Math.PI/2)\n}\n\nmodule.exports = sineOut","module.exports = {\n\t'backInOut': require('./back-in-out'),\n\t'backIn': require('./back-in'),\n\t'backOut': require('./back-out'),\n\t'bounceInOut': require('./bounce-in-out'),\n\t'bounceIn': require('./bounce-in'),\n\t'bounceOut': require('./bounce-out'),\n\t'circInOut': require('./circ-in-out'),\n\t'circIn': require('./circ-in'),\n\t'circOut': require('./circ-out'),\n\t'cubicInOut': require('./cubic-in-out'),\n\t'cubicIn': require('./cubic-in'),\n\t'cubicOut': require('./cubic-out'),\n\t'elasticInOut': require('./elastic-in-out'),\n\t'elasticIn': require('./elastic-in'),\n\t'elasticOut': require('./elastic-out'),\n\t'expoInOut': require('./expo-in-out'),\n\t'expoIn': require('./expo-in'),\n\t'expoOut': require('./expo-out'),\n\t'linear': require('./linear'),\n\t'quadInOut': require('./quad-in-out'),\n\t'quadIn': require('./quad-in'),\n\t'quadOut': require('./quad-out'),\n\t'quartInOut': require('./quart-in-out'),\n\t'quartIn': require('./quart-in'),\n\t'quartOut': require('./quart-out'),\n\t'quintInOut': require('./quint-in-out'),\n\t'quintIn': require('./quint-in'),\n\t'quintOut': require('./quint-out'),\n\t'sineInOut': require('./sine-in-out'),\n\t'sineIn': require('./sine-in'),\n\t'sineOut': require('./sine-out')\n}","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","import runWithFps from 'run-with-fps';\nimport Point, { distFast } from './point';\nimport Vector from 'victor';\nimport lerp from '@sunify/lerp-color';\nimport eases from 'eases';\nimport memoize from 'lodash/memoize';\n\nvar PIXEL_RATIO = (function() {\n  var ctx = document.createElement('canvas').getContext('2d'),\n    dpr = window.devicePixelRatio || 1,\n    bsr =\n      ctx.webkitBackingStorePixelRatio ||\n      ctx.mozBackingStorePixelRatio ||\n      ctx.msBackingStorePixelRatio ||\n      ctx.oBackingStorePixelRatio ||\n      ctx.backingStorePixelRatio ||\n      1;\n\n  return dpr / bsr;\n})();\n\nconst { innerWidth: width, innerHeight: height } = window;\n\nconst canvasValue = v => v * PIXEL_RATIO;\n\nconst canvas = document.getElementById('bg');\nconst ctx = canvas.getContext('2d');\ncanvas.width = canvasValue(width);\ncanvas.height = canvasValue(height);\ncanvas.style.width = width + 'px';\ncanvas.style.height = height + 'px';\n// ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\n\n// canvas.width = width;\n// canvas.height = height;\n\n// const lerp = memoize(lerpColor);\n\nconst drawLine = path => {\n  ctx.beginPath();\n  path.forEach(([x, y], i) => {\n    if (i === 0) {\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n    }\n  });\n  ctx.stroke();\n};\n\nlet points = [];\n\nconst draw = () => {\n  canvas.width = canvas.width;\n  if (mouseMoving) {\n  }\n  // if (mouseTrack.length > 1) {\n  //   ctx.strokeStyle = 'rgba(255, 255, 255, 1)';\n  //   drawLine(mouseTrack);\n  // }\n\n  const ttl = 1300;\n  points = points.filter(([_, t]) => Date.now() - t < ttl);\n  // ctx.shadowBlur = 10;\n  points.forEach(([p, t]) => {\n    const age = (Date.now() - t) / ttl;\n    ctx.strokeStyle = lerp(\n      `rgba(255, 255, 120, 0.7)`,\n      `rgba(255, 25, 0, 0.3)`,\n      eases.quartInOut(age)\n    );\n    // ctx.shadowColor = lerp(\n    //   `rgba(255, 255, 120, 0.4)`,\n    //   `rgba(255, 255, 120, 0.2)`,\n    //   eases.cubicIn(age)\n    // );\n    ctx.lineWidth = PIXEL_RATIO;\n    p.update();\n    const dx = (Math.cos(p.vel.angle()) * p.vel.length() * 2) / PIXEL_RATIO;\n    const dy = (Math.sin(p.vel.angle()) * p.vel.length() * 2) / PIXEL_RATIO;\n    ctx.beginPath();\n    ctx.moveTo(p.pos.x + dx, p.pos.y + dy);\n    ctx.lineTo(p.pos.x, p.pos.y);\n    ctx.stroke();\n  });\n\n  if (!mouseMoving) {\n    const a = Date.now() / 3000;\n    const cx = width / 2 + Math.cos(a) * 200;\n    const cy = height / 2 + Math.sin(a) * 300 * (Math.cos(a) / 2);\n    mouseTrack.push([cx, cy]);\n    mouseTrack = mouseTrack.slice(-2);\n    emitParticles(cx, cy);\n  }\n};\n\nconst emitParticles = (x, y) => {\n  if (mouseTrack.length > 1) {\n    const baseAngle = Math.atan2(\n      mouseTrack[1][1] - mouseTrack[0][1],\n      mouseTrack[1][0] - mouseTrack[0][0]\n    );\n    const baseLen = distFast(\n      mouseTrack[0][0],\n      mouseTrack[0][1],\n      mouseTrack[1][0],\n      mouseTrack[1][1]\n    );\n\n    for (let i = 0; i < 15; i += 1) {\n      const angle = baseAngle + (Math.PI / 1.7) * (0.5 - Math.random()); // spread particles a little\n      const len = Math.max(-40, -10 * (baseLen / 3)) * Math.random();\n      points.push([\n        new Point(\n          new Vector(canvasValue(x), canvasValue(y)),\n          new Vector(len * Math.cos(angle), len * Math.sin(angle)),\n          new Vector(-0.1 * Math.cos(angle), -0.1 * Math.sin(angle))\n        ),\n        Date.now() + 100 * Math.random(),\n        angle\n      ]);\n    }\n  }\n};\n\nlet mouseMoving = false;\nlet mouseTrack = [];\nlet trackClearanceTimeout;\n\nconst handleMove = e => {\n  if (e.touches) {\n    e.preventDefault();\n  }\n  if (mouseMoving === false) {\n    mouseTrack = [];\n  }\n  mouseTrack.push([e.pageX, e.pageY]);\n  mouseTrack = mouseTrack.slice(-2);\n  mouseMoving = true;\n  if (trackClearanceTimeout) {\n    clearTimeout(trackClearanceTimeout);\n  }\n\n  emitParticles(e.pageX, e.pageY);\n\n  trackClearanceTimeout = setTimeout(() => {\n    mouseTrack = [];\n    mouseMoving = false;\n  }, 400);\n};\ndocument.addEventListener('mousemove', handleMove);\ndocument.addEventListener('touchforcechange', () => undefined, false);\ndocument.addEventListener('touchmove', handleMove, { passive: false });\n\nconst fireworks = (x, y) => {\n  for (let i = 0; i < 40; i += 1) {\n    const angle = Math.PI * 2 * Math.random();\n    const len = 30 + 120 * Math.random() * PIXEL_RATIO;\n    points.push([\n      new Point(\n        new Vector(x, y),\n        new Vector(len * Math.cos(angle), len * Math.sin(angle)),\n        new Vector(0.7 * Math.cos(angle), 0.5)\n      ),\n      Date.now() + Math.random() * 1000,\n      angle\n    ]);\n  }\n};\n\nconst handleClick = e => {\n  if (e.altKey) {\n    for (let i = 0; i < 20; i++) {\n      setTimeout(() => {\n        fireworks(\n          canvasValue(width) * Math.random(),\n          canvasValue(height) * Math.random()\n        );\n      }, 2000 * Math.random());\n    }\n  } else {\n    fireworks(canvasValue(e.pageX), canvasValue(e.pageY));\n  }\n};\n\ndocument.addEventListener('mouseup', handleClick);\ndocument.addEventListener('touchend', handleClick);\n\nconst stop = runWithFps(draw, 20);\n\n// Handle hot module replacement\nif (module.hot) {\n  module.hot.dispose(() => {\n    if (stop) {\n      stop();\n    }\n  });\n}\n"]}