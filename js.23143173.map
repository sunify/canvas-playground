{"version":3,"sources":["node_modules/run-with-fps/index.js","node_modules/v-for-vector/dist/vector.js","node_modules/v-for-vector/dist/index.js","node_modules/lerp/index.js","node_modules/lerp-array/index.js","node_modules/rgb-hex/index.js","node_modules/hex-rgb/index.js","node_modules/@sunify/lerp-color/dist/utils.js","node_modules/@sunify/lerp-color/dist/index.js","curves/src/js/constants.js","curves/src/js/curves.js","node_modules/eases/back-in-out.js","node_modules/eases/back-in.js","node_modules/eases/back-out.js","node_modules/eases/bounce-out.js","node_modules/eases/bounce-in-out.js","node_modules/eases/bounce-in.js","node_modules/eases/circ-in-out.js","node_modules/eases/circ-in.js","node_modules/eases/circ-out.js","node_modules/eases/cubic-in-out.js","node_modules/eases/cubic-in.js","node_modules/eases/cubic-out.js","node_modules/eases/elastic-in-out.js","node_modules/eases/elastic-in.js","node_modules/eases/elastic-out.js","node_modules/eases/expo-in-out.js","node_modules/eases/expo-in.js","node_modules/eases/expo-out.js","node_modules/eases/linear.js","node_modules/eases/quad-in-out.js","node_modules/eases/quad-in.js","node_modules/eases/quad-out.js","node_modules/eases/quart-in-out.js","node_modules/eases/quart-in.js","node_modules/eases/quart-out.js","node_modules/eases/quint-in-out.js","node_modules/eases/quint-in.js","node_modules/eases/quint-out.js","node_modules/eases/sine-in-out.js","node_modules/eases/sine-in.js","node_modules/eases/sine-out.js","node_modules/eases/index.js","curves/src/js/renderPoints.js","curves/src/js/point.js","curves/src/js/emitPoints.js","curves/src/js/index.js"],"names":["module","exports","red","green","blue","alpha","isPercent","toString","includes","res","match","map","Number","undefined","parseFloat","TypeError","Math","round","slice","hexChars","match3or4Hex","match6or8Hex","nonHexChars","RegExp","validHexSize","hex","options","test","replace","length","parseInt","substring","repeat","num","format","POINTS_TTL","PIXEL_RATIO","ctx","document","createElement","getContext","dpr","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","circle","time","width","height","size","min","cos","sin","lemniscate","spiral","a","b","angle","log","lorenz","x","y","z","lorenzAttractor","x1","y1","z1","result","rose","k","r","hypocycloid","lissajous","phi","B","getPoint","dt","title","url","PI","colors","primary","secondary","renderPoints","points","forEach","p","t","age","Date","now","strokeStyle","eases","sineInOut","lineWidth","update","offset","vel","clone","mult","div","add","pos","beginPath","moveTo","lineTo","stroke","distFast","x2","y2","abs","max","Point","acc","friction","Vector","emitPoints","v1","v2","baseAngle","sub","baseLen","dist","i","random","len","push","polar","caption","getElementById","innerWidth","innerHeight","atCenter","canvas","style","curveIndex","curves","curve","innerHTML","documentElement","setProperty","track","draw","filter","cartesian","concat","stop","hot","dispose"],"mappings":"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","file":"js.23143173.map","sourceRoot":"..","sourcesContent":["module.exports = function runWithFPS (fn, fps) {\n  var interval = 1000 / fps;\n  var then = Date.now();\n  var stopped = false;\n\n  function run() {\n    if (!stopped) {\n      requestAnimationFrame(run);\n    }\n\n    var now = Date.now();\n    var delta = now - then;\n\n    if (delta > interval && !stopped) {\n      then = now - (delta % interval);\n      fn(now);\n    }\n  };\n\n  requestAnimationFrame(run);\n  fn(Date.now());\n\n  return function() {\n    stopped = true;\n  }\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Vector = /** @class */ (function () {\n    function Vector(xOrAngle, yOrMagnitude, polar) {\n        if (polar) {\n            this._x = Vector.x(xOrAngle, yOrMagnitude);\n            this._y = Vector.y(xOrAngle, yOrMagnitude);\n        }\n        else {\n            this._x = xOrAngle;\n            this._y = yOrMagnitude;\n            this._angle = this.angle;\n            this._magnitude = this.magnitude;\n        }\n    }\n    Vector.clone = function (v) {\n        var clone = new Vector(0, 0);\n        clone._x = v._x;\n        clone._y = v._y;\n        return clone;\n    };\n    Vector.random = function () {\n        return Vector.polar(Math.PI * 2 * Math.random(), 1);\n    };\n    Vector.cartesian = function (x, y) {\n        return new Vector(x, y);\n    };\n    Vector.polar = function (angle, magnitude) {\n        return new Vector(angle, magnitude, true);\n    };\n    Vector.dist = function (v1, v2) {\n        var v2x = v2 ? v2.x : 0;\n        var v2y = v2 ? v2.y : 0;\n        return Math.sqrt(Math.pow((v1.x - v2x), 2) + Math.pow((v1.y - v2y), 2));\n    };\n    Vector.x = function (angle, magnitude) {\n        return magnitude * Math.cos(angle);\n    };\n    Vector.y = function (angle, magnitude) {\n        return magnitude * Math.sin(angle);\n    };\n    Vector.dot = function (v1, v2) {\n        return v1.x * v1.y + v2.x * v2.y;\n    };\n    Vector.zero = function () {\n        return Vector.cartesian(0, 0);\n    };\n    Vector.prototype.add = function (b) {\n        if (b instanceof Vector) {\n            this.x += b.x;\n            this.y += b.y;\n        }\n        else {\n            this.x += b;\n            this.y += b;\n        }\n        return this;\n    };\n    Vector.prototype.mult = function (n) {\n        this.x *= n;\n        this.y *= n;\n        return this;\n    };\n    Vector.prototype.sub = function (b) {\n        if (b instanceof Vector) {\n            this.add(Vector.clone(b).mult(-1));\n        }\n        else {\n            this.add(-b);\n        }\n        return this;\n    };\n    Vector.prototype.div = function (n) {\n        this.x /= n;\n        this.y /= n;\n        return this;\n    };\n    Vector.prototype.clone = function () {\n        return Vector.clone(this);\n    };\n    Vector.prototype.copyFrom = function (v) {\n        this._x = v._x;\n        this._y = v._y;\n        return this;\n    };\n    Vector.prototype.dot = function (v) {\n        return Vector.dot(this, v);\n    };\n    Vector.prototype.limit = function (magnitude) {\n        this.magnitude = Math.min(this.magnitude, magnitude);\n        return this;\n    };\n    Vector.prototype.normalize = function () {\n        if (this.magnitude > 0) {\n            this.div(this.magnitude);\n        }\n        return this;\n    };\n    Object.defineProperty(Vector.prototype, \"x\", {\n        get: function () {\n            return this._x;\n        },\n        set: function (x) {\n            this.setX(x);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Vector.prototype.setX = function (x) {\n        this._x = x;\n        this._magnitude = undefined;\n        this._angle = undefined;\n        return this;\n    };\n    Object.defineProperty(Vector.prototype, \"y\", {\n        get: function () {\n            return this._y;\n        },\n        set: function (y) {\n            this.setY(y);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Vector.prototype.setY = function (y) {\n        this._y = y;\n        this._magnitude = undefined;\n        this._angle = undefined;\n        return this;\n    };\n    Vector.prototype.setCartesian = function (x, y) {\n        this.setX(x);\n        this.setY(y);\n        return this;\n    };\n    Object.defineProperty(Vector.prototype, \"angle\", {\n        get: function () {\n            this._angle =\n                this._angle === undefined ? Math.atan2(this.y, this.x) : this._angle;\n            return this._angle;\n        },\n        set: function (angle) {\n            this.setAngle(angle);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Vector.prototype.setAngle = function (angle) {\n        if (this._angle !== angle) {\n            var magnitude = this.magnitude;\n            this._x = Vector.x(angle, magnitude);\n            this._y = Vector.y(angle, magnitude);\n            this._angle = angle;\n        }\n        return this;\n    };\n    Object.defineProperty(Vector.prototype, \"magnitude\", {\n        get: function () {\n            this._magnitude =\n                this._magnitude === undefined ? Vector.dist(this) : this._magnitude;\n            return this._magnitude;\n        },\n        set: function (magnitude) {\n            this.setMagnitude(magnitude);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Vector.prototype.setMagnitude = function (magnitude) {\n        if (this._magnitude !== magnitude) {\n            var angle = this.angle;\n            this._x = Vector.x(angle, magnitude);\n            this._y = Vector.y(angle, magnitude);\n            this._magnitude = magnitude;\n        }\n        return this;\n    };\n    Vector.prototype.setPolar = function (angle, magnitude) {\n        this._x = Vector.x(angle, magnitude);\n        this._y = Vector.y(angle, magnitude);\n        this._angle = angle;\n        this._magnitude = magnitude;\n        return this;\n    };\n    return Vector;\n}());\nexports.Vector = Vector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vector_1 = require(\"./vector\");\nexports.Vector = vector_1.Vector;\n","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","var lerp = require('lerp')\n\nmodule.exports = function lerpValues(value1, value2, t, out) {\n    if (typeof value1 === 'number'\n            && typeof value2 === 'number')\n        return lerp(value1, value2, t)\n    else { //assume array\n        var len = Math.min(value1.length, value2.length)\n        out = out||new Array(len)\n        for (var i=0; i<len; i++) \n            out[i] = lerp(value1[i], value2[i], t)\n        return out\n    }\n}","'use strict';\n/* eslint-disable no-mixed-operators */\nmodule.exports = (red, green, blue, alpha) => {\n\tconst isPercent = (red + (alpha || '')).toString().includes('%');\n\n\tif (typeof red === 'string') {\n\t\tconst res = red.match(/(0?\\.?\\d{1,3})%?\\b/g).map(Number);\n\t\t// TODO: use destructuring when targeting Node.js 6\n\t\tred = res[0];\n\t\tgreen = res[1];\n\t\tblue = res[2];\n\t\talpha = res[3];\n\t} else if (alpha !== undefined) {\n\t\talpha = parseFloat(alpha);\n\t}\n\n\tif (typeof red !== 'number' ||\n\t\ttypeof green !== 'number' ||\n\t\ttypeof blue !== 'number' ||\n\t\tred > 255 ||\n\t\tgreen > 255 ||\n\t\tblue > 255) {\n\t\tthrow new TypeError('Expected three numbers below 256');\n\t}\n\n\tif (typeof alpha === 'number') {\n\t\tif (!isPercent && alpha >= 0 && alpha <= 1) {\n\t\t\talpha = Math.round(255 * alpha);\n\t\t} else if (isPercent && alpha >= 0 && alpha <= 100) {\n\t\t\talpha = Math.round(255 * alpha / 100);\n\t\t} else {\n\t\t\tthrow new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);\n\t\t}\n\t\talpha = (alpha | 1 << 8).toString(16).slice(1);\n\t} else {\n\t\talpha = '';\n\t}\n\n\treturn ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1) + alpha;\n};\n","'use strict';\n\nconst hexChars = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexChars}]{3}[${hexChars}]?`;\nconst match6or8Hex = `#?[${hexChars}]{6}([${hexChars}]{2})?`;\n\nconst nonHexChars = new RegExp(`[^#${hexChars}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nmodule.exports = function (hex, options = {}) {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alpha = 255;\n\n\tif (hex.length === 8) {\n\t\talpha = parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.substring(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talpha = parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.substring(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst num = parseInt(hex, 16);\n\tconst red = num >> 16;\n\tconst green = (num >> 8) & 255;\n\tconst blue = num & 255;\n\n\treturn options.format === 'array' ?\n\t\t[red, green, blue, alpha] :\n\t\t{red, green, blue, alpha};\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rgb_hex_1 = __importDefault(require(\"rgb-hex\"));\nvar hex_rgb_1 = __importDefault(require(\"hex-rgb\"));\nexports.hexColorRegex = /^#(?=[0-9a-fA-F]*$)(?:.{3}|.{4}|.{6}|.{8})$/;\nexports.rgbColorRegex = /^rgb\\((\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\)$/;\nexports.rgbaColorRegex = /^rgba\\((\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d+(?:\\.\\d+)?|\\.\\d+)\\)$/;\nexports.rgbaHexColorRegex = /^rgba\\((#[0-9a-fA-F]{3,6})\\s*,\\s*(\\d+(?:\\.\\d+)?|\\.\\d+)\\)$/;\nexports.isColor = function (c) {\n    return exports.hexColorRegex.test(String(c)) ||\n        exports.rgbColorRegex.test(String(c)) ||\n        exports.rgbaColorRegex.test(String(c)) ||\n        exports.rgbaHexColorRegex.test(String(c));\n};\nexports.parseColor = function (color) {\n    if (exports.hexColorRegex.test(color)) {\n        var _a = hex_rgb_1.default(color, { format: 'array' }), r = _a[0], g = _a[1], b = _a[2], a = _a[3];\n        return [r, g, b, a === 255 ? 1 : a];\n    }\n    if (exports.rgbColorRegex.test(color)) {\n        var match = color.match(exports.rgbColorRegex);\n        if (match) {\n            return match\n                .slice(1, 4)\n                .map(Number)\n                .concat([1]);\n        }\n    }\n    if (exports.rgbaColorRegex.test(color)) {\n        var match = color.match(exports.rgbaColorRegex);\n        if (match) {\n            return match.slice(1, 5).map(Number);\n        }\n    }\n    if (exports.rgbaHexColorRegex.test(color)) {\n        var match = color.match(exports.rgbaHexColorRegex);\n        if (match) {\n            return hex_rgb_1.default(match[1], { format: 'array' })\n                .slice(0, 3)\n                .concat([Number(match[2])]);\n        }\n        return [];\n    }\n    return undefined;\n};\nexports.stringifyColor = function (color, target) {\n    var _a = color.slice(0, 3).map(Math.round), r = _a[0], g = _a[1], b = _a[2];\n    var a = color[3];\n    if (exports.hexColorRegex.test(target)) {\n        if (a === 1) {\n            return \"#\" + rgb_hex_1.default(r, g, b);\n        }\n        return \"#\" + rgb_hex_1.default(r, g, b, a);\n    }\n    if (exports.rgbColorRegex.test(target) && a === 1) {\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n};\nexports.getStep = function (colors) {\n    if (colors.length === 3) {\n        return [0, colors[2]];\n    }\n    var time = colors.splice(-1)[0];\n    var steps = colors.length - 1;\n    var stepSize = 1 / steps;\n    var step = Math.min(steps - 1, Math.floor(time / stepSize));\n    return [step, (time - stepSize * step) / stepSize];\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lerp_array_1 = __importDefault(require(\"lerp-array\"));\nvar utils_1 = require(\"./utils\");\nvar utils_2 = require(\"./utils\");\nexports.isColor = utils_2.isColor;\nvar lerpColor = function () {\n    var colors = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        colors[_i] = arguments[_i];\n    }\n    if (typeof colors[colors.length - 1] !== 'number') {\n        var parsedColors_1 = colors.map(utils_1.parseColor);\n        return function (t) {\n            var _a = utils_1.getStep(parsedColors_1.concat([t])), step = _a[0], time = _a[1];\n            var start = colors[step];\n            var end = colors[step + 1];\n            if ((time === 0 || start === end) && !utils_1.rgbaHexColorRegex.test(start)) {\n                return start;\n            }\n            if (time === 1 && !utils_1.rgbaHexColorRegex.test(end)) {\n                return end;\n            }\n            var startColor = parsedColors_1[step];\n            var endColor = parsedColors_1[step + 1];\n            if (startColor && endColor) {\n                return utils_1.stringifyColor(lerp_array_1.default(startColor, endColor, time), end);\n            }\n            return undefined;\n        };\n    }\n    else {\n        var _a = utils_1.getStep(colors), step = _a[0], time = _a[1];\n        var start = colors[step];\n        var end = colors[step + 1];\n        if ((time === 0 || start === end) && !utils_1.rgbaHexColorRegex.test(start)) {\n            return start;\n        }\n        if (time === 1 && !utils_1.rgbaHexColorRegex.test(end)) {\n            return end;\n        }\n        var startColor = utils_1.parseColor(start);\n        var endColor = utils_1.parseColor(end);\n        if (startColor && endColor) {\n            return utils_1.stringifyColor(lerp_array_1.default(startColor, endColor, time), end);\n        }\n    }\n    return undefined;\n};\nexports.default = lerpColor;\n","export const POINTS_TTL = 300;\n\nexport const PIXEL_RATIO = (function() {\n  var ctx = document.createElement('canvas').getContext('2d'),\n    dpr = window.devicePixelRatio || 1,\n    bsr =\n      ctx.webkitBackingStorePixelRatio ||\n      ctx.mozBackingStorePixelRatio ||\n      ctx.msBackingStorePixelRatio ||\n      ctx.oBackingStorePixelRatio ||\n      ctx.backingStorePixelRatio ||\n      1;\n\n  return dpr / bsr;\n})();\n","const circle = (time, width, height) => {\n  const size = Math.min(width, height) / 4;\n  return [Math.cos(time) * size, Math.sin(time) * size];\n};\n\nconst lemniscate = (time, width, height) => {\n  const size = Math.min(300, Math.min(width, height) / 4);\n  const x = Math.cos(time) * size;\n  const y = Math.sin(time) * (size / 1.5) * (Math.cos(time) * 1.3);\n  return [x, y];\n};\n\nconst spiral = (time, width, height) => {\n  const a = 2;\n  const b = time ** 0.61;\n\n  const angle = Math.log(time) ** 2.35;\n  const x = (a + b * angle) * Math.cos(angle);\n  const y = (a + b * angle) * Math.sin(angle);\n  return [x, y];\n};\n\nconst lorenz = {\n  x: 5,\n  y: 5,\n  z: 4\n};\nconst lorenzAttractor = () => {\n  const a = 6,\n    b = 22,\n    c = 3;\n  const dt = 0.005;\n  const { x, y, z } = lorenz;\n  const x1 = lorenz.x + a * (-x + y) * dt;\n  const y1 = lorenz.y + (b * x - y - z * x) * dt;\n  const z1 = lorenz.z + (-c * z + x * y) * dt;\n  const result = [x1 * 15, y1 * 15];\n  lorenz.x = x1;\n  lorenz.y = y1;\n  lorenz.z = z1;\n\n  return result;\n};\n\nconst rose = k => (time, width, height) => {\n  const size = Math.min(200, Math.min(width, height) / 4);\n  const a = time;\n  const r = 1.5;\n  const x = Math.cos((a / k) * r) * size * Math.cos(a * r);\n  const y = Math.sin((a / k) * r) * size * Math.cos(a * r);\n  return [x, y];\n};\n\nconst hypocycloid = (a, b) => (time, width, height) => {\n  const size = Math.min(23, Math.min(width, height) / 30);\n  const x =\n    ((a - b) * Math.cos(time) + b * Math.cos((a / b - 1) * time)) * size;\n  const y =\n    ((a - b) * Math.sin(time) - b * Math.sin((a / b - 1) * time)) * size;\n  return [x, y];\n};\n\nconst lissajous = (a, b, phi) => (time, width, height) => {\n  const size = Math.min(200, Math.min(width, height) / 4);\n  const A = size;\n  const B = size;\n  const x = A * Math.sin(a * time + phi);\n  const y = B * Math.sin(b * time);\n  return [x, y];\n};\n\nconst sin = (time, width, height) => {\n  const size = Math.min(40, width / 20);\n  const x = time * size - width / 2;\n  const y = Math.sin(time) * size * 1.4;\n  return [x, y];\n};\n\nexport default [\n  {\n    getPoint: circle,\n    dt: 0.015,\n    title: 'Circle',\n    url: 'https://en.wikipedia.org/wiki/Circle'\n  },\n  {\n    getPoint: lemniscate,\n    dt: 0.015,\n    title: 'Lemniscate of Gerono',\n    url: 'https://en.wikipedia.org/wiki/Lemniscate_of_Gerono'\n  },\n  {\n    getPoint: spiral,\n    dt: 0.05,\n    time: 1,\n    title: 'Spiral',\n    url: 'https://en.wikipedia.org/wiki/Spiral'\n  },\n  {\n    getPoint: lorenzAttractor,\n    dt: 0,\n    title: 'Lorenz attractor',\n    url: 'https://en.wikipedia.org/wiki/Lorenz_system#Lorenz_attractor'\n  },\n  {\n    getPoint: rose(4 / 5),\n    dt: 0.01,\n    title: 'Rose [4/5]',\n    url: 'https://en.wikipedia.org/wiki/Rose_(mathematics)'\n  },\n  {\n    getPoint: rose(4),\n    dt: 0.01,\n    title: 'Rose [4]',\n    url: 'https://en.wikipedia.org/wiki/Rose_(mathematics)'\n  },\n  {\n    getPoint: rose(2 / 3),\n    dt: 0.01,\n    title: 'Rose [2/3]',\n    url: 'https://en.wikipedia.org/wiki/Rose_(mathematics)'\n  },\n  {\n    getPoint: rose(7 / 5),\n    dt: 0.01,\n    title: 'Rose [7/5]',\n    url: 'https://en.wikipedia.org/wiki/Rose_(mathematics)'\n  },\n  {\n    getPoint: hypocycloid(10, 3),\n    dt: 0.013,\n    title: 'Hypocycloid',\n    url: 'https://en.wikipedia.org/wiki/Hypocycloid'\n  },\n  {\n    getPoint: hypocycloid(12, 3),\n    dt: 0.013,\n    title: 'Astroid',\n    url: 'https://en.wikipedia.org/wiki/Astroid'\n  },\n  {\n    getPoint: hypocycloid(12, 4),\n    dt: 0.013,\n    title: 'Deltoid',\n    url: 'https://en.wikipedia.org/wiki/Deltoid_curve'\n  },\n  {\n    getPoint: lissajous(10, 12, Math.PI * 0.67),\n    dt: 0.0015,\n    title: 'Lissajous Curve [10:12]',\n    url: 'https://en.wikipedia.org/wiki/Lissajous_curve'\n  },\n  {\n    getPoint: lissajous(2, 3, Math.PI * 0.37),\n    dt: 0.005,\n    title: 'Lissajous Curve [2:3]',\n    url: 'https://en.wikipedia.org/wiki/Lissajous_curve'\n  },\n  {\n    getPoint: sin,\n    dt: 0.08,\n    title: 'Sine',\n    url: 'https://en.wikipedia.org/wiki/Sine'\n  }\n];\n","function backInOut(t) {\n  var s = 1.70158 * 1.525\n  if ((t *= 2) < 1)\n    return 0.5 * (t * t * ((s + 1) * t - s))\n  return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2)\n}\n\nmodule.exports = backInOut","function backIn(t) {\n  var s = 1.70158\n  return t * t * ((s + 1) * t - s)\n}\n\nmodule.exports = backIn","function backOut(t) {\n  var s = 1.70158\n  return --t * t * ((s + 1) * t + s) + 1\n}\n\nmodule.exports = backOut","function bounceOut(t) {\n  var a = 4.0 / 11.0\n  var b = 8.0 / 11.0\n  var c = 9.0 / 10.0\n\n  var ca = 4356.0 / 361.0\n  var cb = 35442.0 / 1805.0\n  var cc = 16061.0 / 1805.0\n\n  var t2 = t * t\n\n  return t < a\n    ? 7.5625 * t2\n    : t < b\n      ? 9.075 * t2 - 9.9 * t + 3.4\n      : t < c\n        ? ca * t2 - cb * t + cc\n        : 10.8 * t * t - 20.52 * t + 10.72\n}\n\nmodule.exports = bounceOut","var bounceOut = require('./bounce-out')\n\nfunction bounceInOut(t) {\n  return t < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5\n}\n\nmodule.exports = bounceInOut","var bounceOut = require('./bounce-out')\n\nfunction bounceIn(t) {\n  return 1.0 - bounceOut(1.0 - t)\n}\n\nmodule.exports = bounceIn","function circInOut(t) {\n  if ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1)\n  return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)\n}\n\nmodule.exports = circInOut","function circIn(t) {\n  return 1.0 - Math.sqrt(1.0 - t * t)\n}\n\nmodule.exports = circIn","function circOut(t) {\n  return Math.sqrt(1 - ( --t * t ))\n}\n\nmodule.exports = circOut","function cubicInOut(t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0\n}\n\nmodule.exports = cubicInOut","function cubicIn(t) {\n  return t * t * t\n}\n\nmodule.exports = cubicIn","function cubicOut(t) {\n  var f = t - 1.0\n  return f * f * f + 1.0\n}\n\nmodule.exports = cubicOut","function elasticInOut(t) {\n  return t < 0.5\n    ? 0.5 * Math.sin(+13.0 * Math.PI/2 * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n    : 0.5 * Math.sin(-13.0 * Math.PI/2 * ((2.0 * t - 1.0) + 1.0)) * Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0\n}\n\nmodule.exports = elasticInOut","function elasticIn(t) {\n  return Math.sin(13.0 * t * Math.PI/2) * Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nmodule.exports = elasticIn","function elasticOut(t) {\n  return Math.sin(-13.0 * (t + 1.0) * Math.PI/2) * Math.pow(2.0, -10.0 * t) + 1.0\n}\n\nmodule.exports = elasticOut","function expoInOut(t) {\n  return (t === 0.0 || t === 1.0)\n    ? t\n    : t < 0.5\n      ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n      : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0\n}\n\nmodule.exports = expoInOut","function expoIn(t) {\n  return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nmodule.exports = expoIn","function expoOut(t) {\n  return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t)\n}\n\nmodule.exports = expoOut","function linear(t) {\n  return t\n}\n\nmodule.exports = linear","function quadInOut(t) {\n    t /= 0.5\n    if (t < 1) return 0.5*t*t\n    t--\n    return -0.5 * (t*(t-2) - 1)\n}\n\nmodule.exports = quadInOut","function quadIn(t) {\n  return t * t\n}\n\nmodule.exports = quadIn","function quadOut(t) {\n  return -t * (t - 2.0)\n}\n\nmodule.exports = quadOut","function quarticInOut(t) {\n  return t < 0.5\n    ? +8.0 * Math.pow(t, 4.0)\n    : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0\n}\n\nmodule.exports = quarticInOut","function quarticIn(t) {\n  return Math.pow(t, 4.0)\n}\n\nmodule.exports = quarticIn","function quarticOut(t) {\n  return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0\n}\n\nmodule.exports = quarticOut","function qinticInOut(t) {\n    if ( ( t *= 2 ) < 1 ) return 0.5 * t * t * t * t * t\n    return 0.5 * ( ( t -= 2 ) * t * t * t * t + 2 )\n}\n\nmodule.exports = qinticInOut","function qinticIn(t) {\n  return t * t * t * t * t\n}\n\nmodule.exports = qinticIn","function qinticOut(t) {\n  return --t * t * t * t * t + 1\n}\n\nmodule.exports = qinticOut","function sineInOut(t) {\n  return -0.5 * (Math.cos(Math.PI*t) - 1)\n}\n\nmodule.exports = sineInOut","function sineIn (t) {\n  var v = Math.cos(t * Math.PI * 0.5)\n  if (Math.abs(v) < 1e-14) return 1\n  else return 1 - v\n}\n\nmodule.exports = sineIn\n","function sineOut(t) {\n  return Math.sin(t * Math.PI/2)\n}\n\nmodule.exports = sineOut","module.exports = {\n\t'backInOut': require('./back-in-out'),\n\t'backIn': require('./back-in'),\n\t'backOut': require('./back-out'),\n\t'bounceInOut': require('./bounce-in-out'),\n\t'bounceIn': require('./bounce-in'),\n\t'bounceOut': require('./bounce-out'),\n\t'circInOut': require('./circ-in-out'),\n\t'circIn': require('./circ-in'),\n\t'circOut': require('./circ-out'),\n\t'cubicInOut': require('./cubic-in-out'),\n\t'cubicIn': require('./cubic-in'),\n\t'cubicOut': require('./cubic-out'),\n\t'elasticInOut': require('./elastic-in-out'),\n\t'elasticIn': require('./elastic-in'),\n\t'elasticOut': require('./elastic-out'),\n\t'expoInOut': require('./expo-in-out'),\n\t'expoIn': require('./expo-in'),\n\t'expoOut': require('./expo-out'),\n\t'linear': require('./linear'),\n\t'quadInOut': require('./quad-in-out'),\n\t'quadIn': require('./quad-in'),\n\t'quadOut': require('./quad-out'),\n\t'quartInOut': require('./quart-in-out'),\n\t'quartIn': require('./quart-in'),\n\t'quartOut': require('./quart-out'),\n\t'quintInOut': require('./quint-in-out'),\n\t'quintIn': require('./quint-in'),\n\t'quintOut': require('./quint-out'),\n\t'sineInOut': require('./sine-in-out'),\n\t'sineIn': require('./sine-in'),\n\t'sineOut': require('./sine-out')\n}","import lerp from '@sunify/lerp-color';\nimport eases from 'eases';\nimport { PIXEL_RATIO, POINTS_TTL } from './constants';\n\nexport const colors = {\n  primary: '#00FFCC',\n  secondary: '#7800FF'\n};\n\nexport default function renderPoints(points, ctx) {\n  points.forEach(([p, t]) => {\n    const age = (Date.now() - t) / POINTS_TTL;\n    ctx.strokeStyle = lerp(\n      `rgba(${colors.primary}, 0.7)`,\n      `rgba(${colors.secondary}, 0.3)`,\n      eases.sineInOut(age)\n    );\n    ctx.lineWidth = PIXEL_RATIO;\n    p.update();\n    const offset = p.vel\n      .clone()\n      .mult(2)\n      .div(PIXEL_RATIO)\n      .add(p.pos);\n    ctx.beginPath();\n    ctx.moveTo(offset.x * PIXEL_RATIO, offset.y * PIXEL_RATIO);\n    ctx.lineTo(p.pos.x * PIXEL_RATIO, p.pos.y * PIXEL_RATIO);\n    ctx.stroke();\n  });\n}\n","import { Vector } from 'v-for-vector';\n\nexport function distFast(x1, y1, x2, y2) {\n  // Approximation by using octagons approach\n  const x = x2 - x1 || 0.001;\n  const y = y2 - y1 || 0.001;\n  return (\n    1.426776695 *\n    Math.min(\n      0.7071067812 * (Math.abs(x) + Math.abs(y)),\n      Math.max(Math.abs(x), Math.abs(y))\n    )\n  );\n}\n\nexport default class Point {\n  constructor(pos, vel, acc, friction) {\n    this.pos = pos;\n    this.acc = acc || new Vector(0, 0);\n    this.vel = vel || new Vector(0, 0);\n    this.friction = friction || 0.7;\n  }\n\n  update(width, height) {\n    this.vel.add(this.acc);\n    this.vel.mult(this.friction);\n    this.pos.add(this.vel);\n\n    if (this.pos.x > width) {\n      this.pos.x = 0;\n    }\n\n    if (this.pos.x < 0) {\n      this.pos.x = width;\n    }\n\n    if (this.pos.y > height) {\n      this.pos.y = 0;\n    }\n\n    if (this.pos.y < 0) {\n      this.pos.y = height;\n    }\n  }\n}\n","import { Vector } from 'v-for-vector';\nimport Point, { distFast } from './point';\nimport { PIXEL_RATIO } from './constants';\n\nexport default function emitPoints([v1, v2], width, height) {\n  if (!v1 || !v2) {\n    return [];\n  }\n\n  if ((v2.x < 0 || v2.x > width) && (v2.y < 0 || v2.y > height)) {\n    return;\n  }\n\n  const baseAngle = v2.clone().sub(v1).angle;\n  const baseLen = Vector.dist(v1, v2);\n\n  const points = [];\n  for (let i = 0; i < 15; i += 1) {\n    const angle = baseAngle + (Math.PI / 4) * (0.5 - Math.random()); // spread particles a little\n    const len = (Math.max(-10, -10 * (baseLen / 5)) * Math.random()) / 2;\n    points.push([\n      new Point(\n        v2.clone(),\n        Vector.polar(angle, len),\n        Vector.polar(angle, len / 10)\n      ),\n      Date.now() + 100 * Math.random(),\n      angle\n    ]);\n  }\n\n  return points;\n}\n","import runWithFps from 'run-with-fps';\nimport { Vector } from 'v-for-vector';\nimport lerp from '@sunify/lerp-color';\n\nimport { PIXEL_RATIO, POINTS_TTL } from './constants';\nimport curves from './curves';\nimport renderPoints, { colors } from './renderPoints';\nimport emitPoints from './emitPoints';\n\nconst caption = document.getElementById('caption');\n\nconst width = window.innerWidth * 1.2;\nconst height = window.innerHeight * 1.2;\n\nconst atCenter = ([x, y]) => [x + width / 2, y + height / 2];\n\nconst canvas = document.getElementById('bg');\nconst ctx = canvas.getContext('2d');\ncanvas.width = width * PIXEL_RATIO;\ncanvas.height = height * PIXEL_RATIO;\ncanvas.style.width = width + 'px';\ncanvas.style.height = height + 'px';\n\nconst curveIndex = Math.round(Math.random() * (curves.length - 1));\nconst curve = curves[curveIndex];\n\ncaption.innerHTML = `<sup>*</sup> <a href=\"${curve.url}\" target=\"_blank\">${\n  curve.title\n}</a>`;\n\ndocument.documentElement.style.setProperty('--primary', colors.primary);\ndocument.documentElement.style.setProperty(\n  '--primary-fade',\n  `${colors.primary}AA`\n);\ndocument.documentElement.style.setProperty(\n  '--secondary',\n  lerp(colors.secondary, '#FFF', 0.6)\n);\n\nlet track = [];\nlet points = [];\nlet { time = 0, dt, getPoint } = curve;\nconst draw = () => {\n  points = points.filter(([_, t]) => Date.now() - t < POINTS_TTL);\n\n  time += dt;\n  track.push(Vector.cartesian(...atCenter(getPoint(time, width, height))));\n  track = track.slice(-2);\n  points = points.concat(emitPoints(track, width, height));\n\n  renderPoints(points, ctx);\n};\n\nconst stop = runWithFps(draw, 30);\n\n// Handle hot module replacement\nif (module.hot) {\n  module.hot.dispose(() => {\n    if (stop) {\n      stop();\n    }\n  });\n}\n"]}